export class SinChar{constructor(s,e,i){this.digits=Array.from(document.querySelectorAll(s)),this.resultingPassInput=document.getElementById(e),this.filledPass=!!this.resultingPassInput.value,this.recievedPass=[],this.isFilled=!1,this.debugMode=i||!1,this.filledPass&&(this.recievedPass=this.resultingPassInput.value.split(""))}processCodeInput(s){this.digits.forEach((e,i)=>{this.filledPass&&(e.value=this.recievedPass[i]),e.addEventListener("keydown",s=>{if("Backspace"!==s.key&&i>=0&&i<this.digits.length-1)e.value=s.key,this.digits[i+1].focus(),s.preventDefault(),s.stopPropagation();else if("Backspace"!==s.key&&i===this.digits.length-1)return;if(1===e.value.length&&"Backspace"===s.key&&i>0)return this.isFilled=!1,void(e.value="");if(0===e.value.length&&"Backspace"===s.key&&i>0)this.isFilled=!1,this.digits[i-1].value="",this.digits[i-1].focus();else if("Backspace"===s.key&&0===i)return void(this.isFilled=!1)}),e.addEventListener("keyup",t=>{if(this.debugMode&&console.log("keyup"),i===this.digits.length-1?/\d/.test(e.value)||(this.debugMode&&console.log("index === this.digits.length - 1",i),e.value=""):0===i?(this.debugMode&&console.log("index === 0",i),/\d/.test(e.value)||(e.value="")):i>0&&i<this.digits.length-1&&(this.debugMode&&console.log("index > 0 && index < this.digits.length - 1",i),/\d/.test(this.digits[i-1].value)||(this.digits[i-1].value="",this.digits[i-1].focus())),this.resultingPassInput.value="",this.digits.forEach(s=>{this.resultingPassInput.value+=s.value,this.debugMode&&console.log("result: ",this.resultingPassInput.value)}),s&&!this.isFilled&&this.resultingPassInput.value.length===this.digits.length)this.isFilled=!0,s();else{if(this.isFilled||this.resultingPassInput.value.length!==this.digits.length)return;this.debugMode&&console.log("execute action with value: ",this.resultingPassInput.value),this.isFilled=!0}})})}}
