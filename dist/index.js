export class SinChar{constructor(s,i){this.digits=Array.from(document.querySelectorAll(s)),this.resultingPassInput=document.getElementById(i),this.filledPass=!!this.resultingPassInput.value,this.recievedPass=[],this.isFilled=!1,this.filledPass&&(this.recievedPass=this.resultingPassInput.value.split(""))}processCodeInput(s){this.digits.forEach((i,e)=>{this.filledPass&&(i.value=this.recievedPass[e]),i.addEventListener("keypress",s=>{if("Backspace"!==s.key&&e+1<this.digits.length)this.digits[e+1].focus();else if("Backspace"!==s.key&&e===this.digits.length-1)return}),i.addEventListener("keydown",s=>{if(1===i.value.length&&"Backspace"===s.key&&e>0)return this.isFilled=!1,void(i.value="");if(0===i.value.length&&"Backspace"===s.key&&e>0)this.isFilled=!1,this.digits[e-1].value="",this.digits[e-1].focus();else if("Backspace"===s.key&&0===e)return void(this.isFilled=!1)}),i.addEventListener("keyup",t=>{if(e>0&&e<this.digits.length-1?/\d/.test(this.digits[e-1].value)||(this.digits[e-1].value="",this.digits[e-1].focus()):(e===this.digits.length-1||0===e)&&(/\d/.test(i.value)||(i.value="")),this.resultingPassInput.value="",this.digits.forEach(s=>{this.resultingPassInput.value+=s.value}),s&&!this.isFilled&&this.resultingPassInput.value.length===this.digits.length)this.isFilled=!0,s();else{if(this.isFilled||this.resultingPassInput.value.length!==this.digits.length)return;console.log("execute action with value: ",this.resultingPassInput.value),this.isFilled=!0}})})}}
